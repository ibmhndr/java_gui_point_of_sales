/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pbo;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import java.io.File;
import java.util.HashMap;
import java.util.Map;
import java.io.File;
import java.util.HashMap;
import java.util.Map;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;
/**
 *
 * @author Ida Bagus Mahendra
 */
public class transaksi extends javax.swing.JFrame {
    JasperReport jasperReport;
    JasperDesign jasperDesign;
    JasperPrint jasperPrint;
    Map<String, Object> param = new HashMap<String, Object>();
    
    private DefaultTableModel tabel1;
    private DefaultTableModel tabel2;
    
    private int harga1;
    private int id1;
    private int id2;
    private int trans=1;
    private int hartot=0;
    private String cek;
    private String namanya;
    private int amb=1;
    private int hasil2;
    private int harga2;
    /**
     * Creates new form kasir
     */
    public void cek_transaksi()
    {
        try
        {
            Connection c = KoneksiDB.getkoneksi();
            Statement s = c.createStatement();
            String transaksi= "SELECT id_transaksi FROM transaksi";
            ResultSet t = s.executeQuery(transaksi);
            while(t.next())
            {
               int ambil = t.getInt("id_transaksi");    
               trans = ambil +1;
            }
        }
        catch(SQLException e)
        {
            JOptionPane.showMessageDialog(this,e);
        }
    }
    
    public void loadData()
    {
        try
        {
            Connection c = KoneksiDB.getkoneksi();
            Statement s = c.createStatement();
            String dat= "SELECT barang.id_barang, barang.nama_barang, beli.kuantitas, barang.harga, beli.total_harga FROM barang, beli "
                    + "WHERE barang.id_barang = beli.id_barang AND beli.id_transaksi='"+trans+"';";
            ResultSet data;
            data = s.executeQuery(dat);
            while(data.next()){
                Object[] d = new Object[5];
                d[0] = data.getString("id_barang");
                d[1] = data.getString("nama_barang");
                d[2] = data.getString("kuantitas");
                d[3] = data.getString("harga");
                d[4] = data.getString("total_harga");
                tabel2.addRow(d);
            }
            data.close();
        }        
        catch(SQLException e) 
        { 
            JOptionPane.showMessageDialog(this,e);
        }
    }
            
    
    public void ambil_nama()
    {
        tabel1.getDataVector().removeAllElements();
        tabel1.fireTableDataChanged();
        
        try
        {
            Connection c = KoneksiDB.getkoneksi();
            Statement s = c.createStatement();
            String sql= "SELECT * FROM barang WHERE stok>0";
            ResultSet r = s.executeQuery(sql);
            
            while(r.next()){
                Object[] o = new Object[3];
                o[0] = r.getString("id_barang");
                o[1] = r.getString("nama_Barang");
                o[2] = r.getString("Harga");
                tabel1.addRow(o);
            }

        }         
        catch(SQLException e) 
         { 
             
         }
    }
          

    
    public transaksi() {
        initComponents();
        tabel1 = new DefaultTableModel();
        tabel2 = new DefaultTableModel();
        jTable1.setModel(tabel1);
        jTable2.setModel(tabel2);

        tabel2.addColumn("Id");
        tabel2.addColumn("Nama Barang");
        tabel2.addColumn("Kuantitas");
        tabel2.addColumn("Harga");
        tabel2.addColumn("Total");
        
        tabel1.addColumn("Id");
        tabel1.addColumn("Nama Barang");
        tabel1.addColumn("Harga");
        hargatot.setText(""+hartot);
        cek_transaksi();
        ambil_nama();
            
        }

        
       

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSpinner1 = new javax.swing.JSpinner();
        jScrollPane3 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        kuantitas = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        tambah = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        konfirmasi = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        reset = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        hargatot = new javax.swing.JLabel();
        delete = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cari = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        jToggleButton1 = new javax.swing.JToggleButton();

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(jList1);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Kasir");

        jLabel2.setText("Kuantitas");

        tambah.setText("Tambah");
        tambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambahActionPerformed(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);

        konfirmasi.setText("Konfirmasi");
        konfirmasi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                konfirmasiActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Id", "Nama Barang", "Harga"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(10);
        }

        reset.setText("Reset");
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });

        jLabel3.setText("Harga Total");

        hargatot.setText("X");

        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        jButton1.setText("Cetak");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Pilih Barang");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setText("Status Belanjaan");

        jLabel6.setText("Cari Nama Barang");

        jButton2.setText("OK");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jToggleButton1.setText("Kembali");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane4)
                            .addComponent(jScrollPane2))
                        .addGap(49, 49, 49)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cari)
                            .addComponent(jLabel4)
                            .addComponent(jLabel6)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jToggleButton1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(delete)
                                    .addComponent(reset)
                                    .addComponent(jButton1)
                                    .addComponent(konfirmasi)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel3)
                                    .addComponent(hargatot)
                                    .addComponent(jLabel2)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(kuantitas, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(tambah)))))
                        .addContainerGap(43, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jLabel1))
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cari, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jToggleButton1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(kuantitas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tambah))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hargatot)
                        .addGap(1, 1, 1)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(konfirmasi)
                        .addGap(18, 18, 18)
                        .addComponent(delete)
                        .addGap(18, 18, 18)
                        .addComponent(reset)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)
                        .addGap(65, 65, 65))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
      int ambil = this.jTable1.getSelectedRow();//untuk mengambil digit yang diseleksi
      if(ambil == -1)
          return;
      
      //untuk mengambil nilai pada beberapa variabel sesuai baris seleksi
      String id = (String) tabel1.getValueAt(ambil, 0);
      String nama = (String) tabel1.getValueAt(ambil, 1);
      String har = (String) tabel1.getValueAt(ambil, 2);
      
      //untuk mengkonversi beberapa variabel menjadi integer
      id1 = Integer.parseInt(id);
      harga1 = Integer.parseInt(har);
    }//GEN-LAST:event_jTable1MouseClicked

    private void tambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambahActionPerformed
        int qty = Integer.parseInt(
            kuantitas.getText());
        if(qty > 0)
        {
          try
          {            
            Connection c = KoneksiDB.getkoneksi();
            Statement s = c.createStatement();
            int tot = harga1*qty;
            if(id1==0)
            {
               JOptionPane.showMessageDialog(this, "Input Gagal\nBarang Belum Dipilih!","Error",JOptionPane.ERROR_MESSAGE);
            }
            else
            {
             String insert= "INSERT INTO beli(id_barang,kuantitas,total_harga,id_transaksi) VALUES('"+id1+"','"+qty+"','"+tot+"','"+trans+"')";
             s.executeUpdate(insert);
             hartot += tot;
             hargatot.setText(""+hartot);
             JOptionPane.showMessageDialog(this, "data berhasil ditambahkan");   
            }
          }        
        catch(SQLException e) 
        { 
            JOptionPane.showMessageDialog(this, e);
        }
        tabel2.setRowCount(0);
        ambil_nama();
        loadData();
        kuantitas.setText("");
        }
        else
        {
            JOptionPane.showMessageDialog(this,"Nilai Kuantitas Salah!","error",JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_tambahActionPerformed

    private void konfirmasiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_konfirmasiActionPerformed
        if(hartot>0)
        {
          try
          {            
            Connection c = KoneksiDB.getkoneksi();
            Statement s = c.createStatement();
            String tes1 = "SELECT username from login where kondisi = 1";
            ResultSet r = s.executeQuery(tes1);
                
            while(r.next())
            {
                namanya = r.getString(1);
            }
            String tran= "INSERT INTO transaksi(total_semua,date,time,username) VALUES('"+hartot+"',now(),now(),'"+namanya+"')";
            s.executeUpdate(tran);
            JOptionPane.showMessageDialog(this,"Terima Kasih Telah Melakukan Pembelian");
          }        
          catch(SQLException e) 
          { 
            JOptionPane.showMessageDialog(this, e);
          }
        trans++;
        tabel2.setRowCount(0);
        hartot=0;
        hargatot.setText(""+hartot);
        kuantitas.setText("");
        loadData();
        ambil_nama();   
        }
        else
        {
            JOptionPane.showMessageDialog(this,"Tidak ada barang yang dibeli","Error",JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_konfirmasiActionPerformed

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
      if(hartot>0)
      {
         try
        {
            tabel2.getDataVector().removeAllElements();
            tabel2.fireTableDataChanged();
            
            Connection c = KoneksiDB.getkoneksi();
            Statement s = c.createStatement();
            
            String del= "DELETE FROM beli WHERE id_transaksi='"+trans+"'";
            s.executeUpdate(del);
            JOptionPane.showMessageDialog(this, "data berhasil direset");
            loadData();
            ambil_nama();
            kuantitas.setText("");
            hartot=0;
            hargatot.setText(""+hartot);
        }        
        catch(SQLException e) 
        { 
            JOptionPane.showMessageDialog(this, e);
        } 
      }
      else
      {
        JOptionPane.showMessageDialog(this,"Tidak Ada Barang","Error",JOptionPane.ERROR_MESSAGE);
      }  
    }//GEN-LAST:event_resetActionPerformed

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
      int ambil = this.jTable2.getSelectedRow();//untuk mengambil digit yang diseleksi
      if(ambil == -1)
          return;
      
      //untuk mengambil nilai pada beberapa variabel sesuai baris seleksi
      String id = (String) tabel2.getValueAt(ambil, 0);
      String hasil = (String) tabel2.getValueAt(ambil, 4);
      //untuk mengkonversi beberapa variabel menjadi integer
      id2 = Integer.parseInt(id);
      harga2 = Integer.parseInt(hasil);
    }//GEN-LAST:event_jTable2MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try
        {
          File file = new File("C:/Users/Ida Bagus Mahendra/Documents/NetBeansProjects/pbo/src/pbo/struk.jrxml");
          jasperDesign = JRXmlLoader.load(file);
          param.clear();
          jasperReport = JasperCompileManager.compileReport(jasperDesign);
          jasperPrint = JasperFillManager.fillReport(jasperReport, param, 
          KoneksiDB.getkoneksi());
          JasperViewer.viewReport(jasperPrint, false);     
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
    if(hartot>0)
    {
        try
        {
            if(id2==0)
            {
               JOptionPane.showMessageDialog(this, "Input Gagal\nBarang Belum Dipilih!","Error",JOptionPane.ERROR_MESSAGE);
            }
            else
            {
                tabel2.getDataVector().removeAllElements();
                tabel2.fireTableDataChanged();
                Connection c = KoneksiDB.getkoneksi();
                Statement s = c.createStatement();
                String delt= "DELETE FROM beli WHERE id_barang='"+id2+"' AND id_transaksi='"+trans+"'";
                s.executeUpdate(delt);
                JOptionPane.showMessageDialog(this, "data berhasil dihapus");
                hartot = hartot - harga2;
                hargatot.setText(" "+hartot);
                loadData();
                ambil_nama();
            }
        }
        catch(SQLException e)
        {
            JOptionPane.showMessageDialog(this, e);
        }
    }
        else
    {
        JOptionPane.showMessageDialog(this,"Tidak ada barang untuk dihapus","Error",JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_deleteActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String cr = cari.getText();        
        try
        {
            tabel1.getDataVector().removeAllElements();
            tabel1.fireTableDataChanged();
            Connection c = KoneksiDB.getkoneksi();
            Statement s = c.createStatement();
            String sql= "SELECT * FROM barang WHERE nama_barang LIKE'%"+cr+"%'";
            ResultSet h = s.executeQuery(sql);
            tabel1.setRowCount(0);
            while(h.next()){
                Object[] o = new Object[3];
                o[0] = h.getString("id_barang");
                o[1] = h.getString("nama_Barang");
                o[2] = h.getString("Harga");
                tabel1.addRow(o);
            }
            cari.setText("");
        }         
        catch(SQLException e) 
         { 
             JOptionPane.showMessageDialog(this, e);
         }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
    tabel1.setRowCount(0);
    ambil_nama();
    cari.setText("");
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(transaksi.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new transaksi().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cari;
    private javax.swing.JButton delete;
    private javax.swing.JLabel hargatot;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JList<String> jList1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JButton konfirmasi;
    private javax.swing.JTextField kuantitas;
    private javax.swing.JButton reset;
    private javax.swing.JButton tambah;
    // End of variables declaration//GEN-END:variables
}
